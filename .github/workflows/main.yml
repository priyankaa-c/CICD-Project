name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Optional, can be removed if not using Buildx

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 4: Log in to Amazon ECR Public
      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          docker build --tag ${{ secrets.ECR_REPOSITORY_URI }}:latest .

      # Step 6: Push Docker image to Amazon ECR Public
      - name: Push Docker image
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # Step 7: Deploy to ECS
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ve3service
          cluster: vecluster
          wait-for-service-stability: true

      # Step 8: Run integration tests
      - name: Run integration tests
        run: |
          curl -f http://13.201.229.2/api/test || exit 1

      # Step 9: Rollback on failure
      - name: Rollback deployment
        if: failure()
        run: |
          aws ecs update-service --cluster vecluster --service ve3service --force-new-deployment
